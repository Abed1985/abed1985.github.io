<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fortinet on NetSecOps Navigator</title>
    <link>https://abed1985.github.io/tags/fortinet/</link>
    <description>Recent content in fortinet on NetSecOps Navigator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Mar 2025 06:46:32 +0000</lastBuildDate>
    
	<atom:link href="https://abed1985.github.io/tags/fortinet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fortinet Ztna Part IV</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part4/</link>
      <pubDate>Sat, 08 Mar 2025 06:46:32 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part4/</guid>
      <description>Introduction In this fourth installment of our Fortinet ZTNA series, we delve into ZTNA access proxy server types and how each is applied in our Proof of Concept (PoC).
The ZTNA server defines the access proxy VIP and the real servers that clients connect to. Once configured, client requests are redirected to the access proxy VIP, with authentication mechanisms such as SAML layered on top.
ZTNA supports multiple HTTP and SAML authentication methods.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part III</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part3/</link>
      <pubDate>Fri, 07 Mar 2025 01:45:48 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part3/</guid>
      <description>In this third installment of our Fortinet ZTNA series, we explore integrating SAML authentication with Microsoft Azure as the Identity Provider (IdP) and FortiGate as the Service Provider (SP). By leveraging SAML, authentication is offloaded from the access proxy to the IdP, allowing organizations to enforce advanced authentication policies such as Multi-Factor Authentication (MFA)
To learn more about SAML authentication, check out my by blog post: SAML Authentication
Configuring a SAML Application (IdP) on Microsoft Azure Step 1: Create an Enterprise Application  Log in to the Azure Administration Console under your customer tenant.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part II</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part2/</link>
      <pubDate>Thu, 06 Mar 2025 04:32:54 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part2/</guid>
      <description>In the second part of our Fortinet ZTNA series, we explore a practical use case involving remote access to basic on-premises data center resources.
The following high-level diagram illustrates the setup:
This scenario involves the need for remote access to four servers within the data center, each with different access requirements:    Server IP OS Service ZTNA Server Access Proxy Type     192.168.5.100 web server over linux Web access over TCP/443 HTTPS Access Proxy   192.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part I</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part1/</link>
      <pubDate>Thu, 06 Mar 2025 00:58:01 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part1/</guid>
      <description>Solution Overview Definition &amp;amp; Overview Zero Trust Network Access (ZTNA) is an advanced access control method that leverages client device identification, authentication, and Zero Trust tags to provide role-based access to applications. ZTNA enables administrators to manage network access for both on-fabric local users and off-fabric remote users. Access is granted only after a series of checks: device verification, user identity authentication, user authorization, and context-based posture checks, all using Zero Trust tags.</description>
    </item>
    
    <item>
      <title>Fortigate user level DLP</title>
      <link>https://abed1985.github.io/blogs/fortinet-dlp/</link>
      <pubDate>Tue, 04 Mar 2025 23:54:30 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-dlp/</guid>
      <description>Block sensitive data leak to ChatGPT example DLP (Data Leak Prevention) has become increasingly crucial with the rise of LLM AI platforms. Many users rely on AI chat platforms to simplify both their work and personal tasks.
While this convenience is beneficial, it also raises the risk of unintentionally exposing sensitive organizational information. LLM models can incorporate leaked data into their training sets, potentially making it part of responses to external users—significantly increasing security risks.</description>
    </item>
    
    <item>
      <title>Fortinet Guest Wifi with Captive Portal</title>
      <link>https://abed1985.github.io/blogs/fortinet-guest-wifi/</link>
      <pubDate>Mon, 03 Mar 2025 05:57:15 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-guest-wifi/</guid>
      <description>FortiGate support guest Wi-Fi with a captive portal with the portal being the FortiGate itself. The following two login methods can be used:
 Captive portal login with username/password provided to guest users:Accounts are created in bulk on the FortiGate and printed to be provided to end users (e.g., by reception). Captive portal login with guests’ email address only:This is a less preferred option. Email collection can be done from FortiGate and exported for marketing use if a certain legal agreement allow it.</description>
    </item>
    
  </channel>
</rss>