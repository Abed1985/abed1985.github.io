<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>zerotrust on NetSecOps Navigator</title>
    <link>https://abed1985.github.io/tags/zerotrust/</link>
    <description>Recent content in zerotrust on NetSecOps Navigator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Mar 2025 23:40:02 +0000</lastBuildDate>
    
	<atom:link href="https://abed1985.github.io/tags/zerotrust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fortinet ZTNZ Part VIII</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part8/</link>
      <pubDate>Tue, 18 Mar 2025 23:40:02 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part8/</guid>
      <description>Finalizing Fortinet ZTNA: Rules, Verification, and Testing In this final installment of the Fortinet ZTNA series, we will explore FortiGate ZTNA rules, conduct final verifications, and test the proof of concept (POC) from an end-user perspective.
ZTNA Rules ZTNA rules define access policies using proxy policies to enforce Zero Trust role-based access control. These policies can include ZTNA tags, which are synchronized from FortiClient EMS, and security profiles for additional protection.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNZ Part VII</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part7/</link>
      <pubDate>Tue, 11 Mar 2025 21:22:27 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part7/</guid>
      <description>Introduction Welcome to the seventh installment of our Fortinet ZTNA series! In this guide, we explore the configuration of ZTNA tags and tagging rulesâ€”essential components that determine whether an endpoint is compliant or non-compliant when accessing data center (DC) resources. This step-by-step tutorial will walk you through setting up ZTNA tags, defining tagging rules, and understanding the available configuration options.
Zero-Trust Tagging Rules Tagging rules are configured within FortiClient EMS (Endpoint Management System) and help classify endpoints based on compliance criteria.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part VI</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part6/</link>
      <pubDate>Mon, 10 Mar 2025 04:03:33 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part6/</guid>
      <description>In this sixth installment of our Fortinet ZTNA series, we delve into the configuration of ZTNA destinations in FortiEMS. These destinations play a crucial role in enabling secure access to internal resources through the access proxy. This guide provides a step-by-step overview of setting up ZTNA destinations, including key configuration elements and best practices.
ZTNA Destinations We have a ZTNA Destination profile named &amp;ldquo;ENDPOINTPOLICY-OFF-NETWORK&amp;rdquo; created under Endpoint Profiles &amp;gt; ZTNA Destinations.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part V</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part5/</link>
      <pubDate>Sun, 09 Mar 2025 02:18:29 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part5/</guid>
      <description>Introduction In this fifth installment of our Fortinet ZTNA series, we explore ZTNA certificate management and its role in securing client authentication and access control.
ZTNA Certificate Management FortiClient EMS plays a central role in managing certificates for ZTNA authentication. Below are key points regarding ZTNA CA and certificate handling:
 FortiClient EMS has a default root CA certificate (default_ZTNARootCA), which is assigned to the default customer site. Each customer site, such as CUSTOMER-TEST, has a unique root CA.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part IV</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part4/</link>
      <pubDate>Sat, 08 Mar 2025 06:46:32 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part4/</guid>
      <description>Introduction In this fourth installment of our Fortinet ZTNA series, we delve into ZTNA access proxy server types and how each is applied in our Proof of Concept (PoC).
The ZTNA server defines the access proxy VIP and the real servers that clients connect to. Once configured, client requests are redirected to the access proxy VIP, with authentication mechanisms such as SAML layered on top.
ZTNA supports multiple HTTP and SAML authentication methods.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part III</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part3/</link>
      <pubDate>Fri, 07 Mar 2025 01:45:48 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part3/</guid>
      <description>In this third installment of our Fortinet ZTNA series, we explore integrating SAML authentication with Microsoft Azure as the Identity Provider (IdP) and FortiGate as the Service Provider (SP). By leveraging SAML, authentication is offloaded from the access proxy to the IdP, allowing organizations to enforce advanced authentication policies such as Multi-Factor Authentication (MFA)
To learn more about SAML authentication, check out my by blog post: SAML Authentication
Configuring a SAML Application (IdP) on Microsoft Azure Step 1: Create an Enterprise Application  Log in to the Azure Administration Console under your customer tenant.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part II</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part2/</link>
      <pubDate>Thu, 06 Mar 2025 04:32:54 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part2/</guid>
      <description>In the second part of our Fortinet ZTNA series, we explore a practical use case involving remote access to basic on-premises data center resources.
The following high-level diagram illustrates the setup:
This scenario involves the need for remote access to four servers within the data center, each with different access requirements:    Server IP OS Service ZTNA Server Access Proxy Type     192.168.5.100 web server over linux Web access over TCP/443 HTTPS Access Proxy   192.</description>
    </item>
    
    <item>
      <title>Fortinet ZTNA Part I</title>
      <link>https://abed1985.github.io/blogs/fortinet-ztna-part1/</link>
      <pubDate>Thu, 06 Mar 2025 00:58:01 +0000</pubDate>
      
      <guid>https://abed1985.github.io/blogs/fortinet-ztna-part1/</guid>
      <description>Solution Overview Definition &amp;amp; Overview Zero Trust Network Access (ZTNA) is an advanced access control method that leverages client device identification, authentication, and Zero Trust tags to provide role-based access to applications. ZTNA enables administrators to manage network access for both on-fabric local users and off-fabric remote users. Access is granted only after a series of checks: device verification, user identity authentication, user authorization, and context-based posture checks, all using Zero Trust tags.</description>
    </item>
    
  </channel>
</rss>